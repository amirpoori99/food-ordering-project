# Alert Rules for Food Ordering System
# Enterprise Performance Monitoring

groups:
  # Application Performance Alerts
  - name: food_ordering_performance
    rules:
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 0.5
        for: 2m
        labels:
          severity: warning
          service: food-ordering
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for {{ $labels.instance }}"

      - alert: CriticalResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1.0
        for: 1m
        labels:
          severity: critical
          service: food-ordering
        annotations:
          summary: "Critical response time detected"
          description: "95th percentile response time is {{ $value }}s for {{ $labels.instance }}"

      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
        for: 2m
        labels:
          severity: warning
          service: food-ordering
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for {{ $labels.instance }}"

      - alert: CriticalErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.1
        for: 1m
        labels:
          severity: critical
          service: food-ordering
        annotations:
          summary: "Critical error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for {{ $labels.instance }}"

  # System Resource Alerts
  - name: system_resources
    rules:
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value }}% for {{ $labels.instance }}"

      - alert: CriticalCPUUsage
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 90
        for: 2m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Critical CPU usage detected"
          description: "CPU usage is {{ $value }}% for {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value }}% for {{ $labels.instance }}"

      - alert: CriticalMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 95
        for: 2m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Critical memory usage detected"
          description: "Memory usage is {{ $value }}% for {{ $labels.instance }}"

      - alert: DiskSpaceRunningOut
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "Disk space running out"
          description: "Disk usage is {{ $value }}% for {{ $labels.instance }} on {{ $labels.device }}"

  # Database Performance Alerts
  - name: database_performance
    rules:
      - alert: DatabaseConnectionsHigh
        expr: max_over_time(mysql_global_status_threads_connected[5m]) > 80
        for: 2m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High database connections"
          description: "Database has {{ $value }} active connections"

      - alert: DatabaseSlowQueries
        expr: rate(mysql_global_status_slow_queries[5m]) > 5
        for: 2m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High number of slow queries"
          description: "{{ $value }} slow queries per second"

      - alert: DatabaseReplicationLag
        expr: mysql_slave_lag_seconds > 30
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "Database replication lag"
          description: "Replication lag is {{ $value }} seconds"

  # Cache Performance Alerts
  - name: cache_performance
    rules:
      - alert: LowCacheHitRatio
        expr: redis_keyspace_hits_total / (redis_keyspace_hits_total + redis_keyspace_misses_total) < 0.8
        for: 5m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "Low cache hit ratio"
          description: "Cache hit ratio is {{ $value | humanizePercentage }}"

      - alert: CriticalCacheHitRatio
        expr: redis_keyspace_hits_total / (redis_keyspace_hits_total + redis_keyspace_misses_total) < 0.6
        for: 2m
        labels:
          severity: critical
          service: cache
        annotations:
          summary: "Critical cache hit ratio"
          description: "Cache hit ratio is {{ $value | humanizePercentage }}"

      - alert: RedisMemoryUsageHigh
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 2m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "Redis memory usage high"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

  # JVM Performance Alerts
  - name: jvm_performance
    rules:
      - alert: HighGCTime
        expr: rate(jvm_gc_collection_seconds_sum[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
          service: jvm
        annotations:
          summary: "High GC time"
          description: "GC time is {{ $value }}s per second"

      - alert: HighHeapUsage
        expr: jvm_memory_used_bytes{area="heap"} / jvm_memory_max_bytes{area="heap"} > 0.85
        for: 5m
        labels:
          severity: warning
          service: jvm
        annotations:
          summary: "High heap usage"
          description: "Heap usage is {{ $value | humanizePercentage }}"

      - alert: CriticalHeapUsage
        expr: jvm_memory_used_bytes{area="heap"} / jvm_memory_max_bytes{area="heap"} > 0.95
        for: 1m
        labels:
          severity: critical
          service: jvm
        annotations:
          summary: "Critical heap usage"
          description: "Heap usage is {{ $value | humanizePercentage }}"

  # Business Logic Alerts
  - name: business_metrics
    rules:
      - alert: OrderProcessingTimeHigh
        expr: histogram_quantile(0.95, rate(order_processing_duration_seconds_bucket[5m])) > 30
        for: 2m
        labels:
          severity: warning
          service: business
        annotations:
          summary: "High order processing time"
          description: "95th percentile order processing time is {{ $value }}s"

      - alert: PaymentFailureRateHigh
        expr: rate(payment_failures_total[5m]) / rate(payment_attempts_total[5m]) > 0.05
        for: 2m
        labels:
          severity: warning
          service: business
        annotations:
          summary: "High payment failure rate"
          description: "Payment failure rate is {{ $value | humanizePercentage }}"

      - alert: UserRegistrationDropping
        expr: rate(user_registrations_total[1h]) < rate(user_registrations_total[1h] offset 24h) * 0.5
        for: 10m
        labels:
          severity: warning
          service: business
        annotations:
          summary: "User registration rate dropping"
          description: "User registration rate has dropped significantly"

  # Service Availability Alerts
  - name: service_availability
    rules:
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
          service: availability
        annotations:
          summary: "Service is down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minute"

      - alert: ServiceFlapping
        expr: changes(up[10m]) > 5
        for: 2m
        labels:
          severity: warning
          service: availability
        annotations:
          summary: "Service is flapping"
          description: "{{ $labels.instance }} has changed state {{ $value }} times in 10 minutes" 