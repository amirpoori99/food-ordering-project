# Redis Configuration for Food Ordering System - Production
# Phase 46 Enhancement - Enterprise-Grade Redis Setup

################################## NETWORK #####################################

# Accept connections on the specified port, default is 6379
port 6379

# TCP listen() backlog.
tcp-backlog 511

# Close the connection after a client is idle for N seconds (0 to disable)
timeout 300

# TCP keepalive
tcp-keepalive 300

# Bind to specific interfaces
bind 127.0.0.1 ::1

# Protected mode
protected-mode yes

################################# TLS/SSL ######################################

# TLS/SSL configuration for secure connections
# tls-port 6380
# tls-cert-file /path/to/redis.crt
# tls-key-file /path/to/redis.key
# tls-ca-cert-file /path/to/ca.crt

################################# GENERAL #####################################

# Daemon mode
daemonize yes

# Process ID file
pidfile /var/run/redis_6379.pid

# Log level (debug, verbose, notice, warning)
loglevel notice

# Log file
logfile /var/log/redis/redis-server.log

# Set the number of databases (default 16)
databases 16

# Show Redis logo on startup
always-show-logo no

# Set server verbosity
set-proc-title yes
proc-title-template '{title} {listen-addr} {server-mode}'

################################ SNAPSHOTTING  ################################

# RDB Snapshots for persistence
save 900 1     # Save if at least 1 key changed in 900 seconds
save 300 10    # Save if at least 10 keys changed in 300 seconds  
save 60 10000  # Save if at least 10000 keys changed in 60 seconds

# Stop writes if RDB snapshots fail
stop-writes-on-bgsave-error yes

# Compress RDB files
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# RDB directory
dir /var/lib/redis

################################# REPLICATION #################################

# Master-Slave replication configuration
# replica-serve-stale-data yes
# replica-read-only yes
# repl-diskless-sync no
# repl-diskless-sync-delay 5
# repl-ping-replica-period 10
# repl-timeout 60
# repl-disable-tcp-nodelay no
# repl-backlog-size 1mb
# repl-backlog-ttl 3600

################################## SECURITY ###################################

# Authentication
requirepass foodordering_redis_password_2025

# Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG "CONFIG_09f911029d74e35bd84156c5635688c0"
rename-command DEBUG ""
rename-command EVAL ""

################################### CLIENTS ####################################

# Max number of connected clients
maxclients 10000

############################## MEMORY MANAGEMENT #############################

# Max memory policy
maxmemory 2gb
maxmemory-policy allkeys-lru

# Memory samples for LRU algorithm
maxmemory-samples 5

# Replica ignore max memory
replica-ignore-maxmemory yes

############################# LAZY FREEING ####################################

# Lazy freeing for better performance
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
replica-lazy-flush yes

# Delete expired keys in background
lazyfree-lazy-user-del yes

############################ KERNEL OOM CONTROL ##############################

# OOM control
oom-score-adj no

# OOM score adjustment for replica
oom-score-adj-values 0 200 800

#################### KERNEL TRANSPARENT HUGEPAGE CONTROL ######################

# Disable transparent huge pages
disable-thp yes

############################## APPEND ONLY FILE ###############################

# AOF persistence
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec

# AOF rewrite
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# AOF load truncated
aof-load-truncated yes

# AOF timestamp
aof-use-rdb-preamble yes

# AOF rewrite incremental
aof-rewrite-incremental-fsync yes

################################ LUA SCRIPTING  ###############################

# Lua script time limit (milliseconds)
lua-time-limit 5000

################################## SLOW LOG ###################################

# Slow log configuration
slowlog-log-slower-than 10000
slowlog-max-len 128

################################ LATENCY MONITOR ##############################

# Latency monitoring
latency-monitor-threshold 100

############################# EVENT NOTIFICATION ##############################

# Keyspace notifications
notify-keyspace-events "Ex"

############################### ADVANCED CONFIG ###############################

# Hash settings
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List settings  
list-max-ziplist-size -2
list-compress-depth 0

# Set settings
set-max-intset-entries 512

# Sorted set settings
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog settings
hll-sparse-max-bytes 3000

# Streams settings
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol buffer limit
proto-max-bulk-len 512mb

# Frequency for background tasks
hz 10

# Dynamic HZ
dynamic-hz yes

# AOF rewrite scheduling
aof-rewrite-incremental-fsync yes

# RDB save scheduling
rdb-save-incremental-fsync yes

# Jemalloc background thread
jemalloc-bg-thread yes

# Hash function for hashing
hash-seed 0

########################### FOOD ORDERING SPECIFIC ###########################

# Custom configuration for Food Ordering System

# Cache TTL for different data types (in seconds)
# Restaurant data: 1 hour
# Menu items: 30 minutes  
# User sessions: 2 hours
# Order data: 1 hour
# Payment cache: 5 minutes

# Performance optimizations
tcp-keepalive 60
timeout 0

# Memory optimization for food ordering workload
maxmemory-policy volatile-lru
lazyfree-lazy-eviction yes

# Replication for high availability
# masterauth foodordering_redis_password_2025
# replica-read-only yes

################################ MONITORING ###################################

# Performance monitoring
latency-monitor-threshold 100
slowlog-log-slower-than 5000
slowlog-max-len 256

# Memory usage tracking  
maxmemory-samples 10

# Connection tracking
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60

################################## CLUSTERING ##################################

# Redis Cluster configuration (for production scaling)
# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-migration-barrier 1
# cluster-require-full-coverage yes

################################### MODULES ####################################

# Load Redis modules
# loadmodule /path/to/redis-module.so

################################## INCLUDES ###################################

# Include other config files
# include /path/to/other.conf

################################ FOOD ORDERING CACHE STRUCTURE ###############

# Cache key patterns for Food Ordering System:
#
# Users:           user:session:{user_id}           TTL: 2 hours
# Restaurants:     restaurant:{restaurant_id}       TTL: 1 hour  
# Menu:           menu:{restaurant_id}              TTL: 30 minutes
# Orders:         order:{order_id}                  TTL: 1 hour
# Cart:           cart:{user_id}                    TTL: 30 minutes
# Analytics:      analytics:{date}:{metric}         TTL: 24 hours
# Cache:          cache:{endpoint}:{params_hash}    TTL: 5-15 minutes

################################ PERFORMANCE NOTES ############################

# Optimized for:
# - High read/write ratio (80/20)
# - Session management
# - Temporary data caching
# - Real-time order tracking
# - Analytics data aggregation
#
# Expected load:
# - 1000+ concurrent connections
# - 10,000+ operations per second
# - 2GB memory usage
# - 99.9% uptime requirement 