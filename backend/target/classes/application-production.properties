# =================================================================
# سیستم سفارش غذا - پیکربندی محیط تولید
# =================================================================
# فایل پیکربندی کامل برای محیط تولید (Production Environment)
# این فایل شامل تمام تنظیمات امنیتی، عملکردی و پیکربندی‌های مورد نیاز برای محیط تولید است
# تمام مقادیر حساس باید از متغیرهای محیطی خوانده شوند و در فایل .env ذخیره شوند

# =================================================================
# تنظیمات سرور
# =================================================================
# پیکربندی اصلی سرور HTTP برای محیط تولید
server.host=${SERVER_HOST:0.0.0.0}
# آدرس میزبان سرور - 0.0.0.0 برای پذیرش اتصالات از تمام آدرس‌ها
# در محیط تولید معمولاً از Load Balancer یا Reverse Proxy استفاده می‌شود

server.port=${SERVER_PORT:8081}
# پورت سرور - پورت پیش‌فرض 8081 برای محیط تولید
# این پورت باید در فایروال باز باشد و به Load Balancer متصل شود

server.max.threads=${SERVER_MAX_THREADS:200}
# حداکثر تعداد thread های همزمان برای پردازش درخواست‌ها
# برای محیط تولید با ترافیک بالا، این مقدار افزایش یافته است

server.timeout.seconds=${SERVER_TIMEOUT:30}
# زمان timeout برای درخواست‌ها به ثانیه
# در محیط تولید، timeout طولانی‌تر برای عملیات پیچیده تنظیم می‌شود

server.backlog=${SERVER_BACKLOG:100}
# تعداد اتصالات در صف انتظار
# برای محیط تولید با ترافیک بالا، این مقدار افزایش یافته است

# =================================================================
# تنظیمات پایگاه داده (PostgreSQL برای محیط تولید)
# =================================================================
# پیکربندی اتصال به پایگاه داده PostgreSQL برای محیط تولید
# PostgreSQL برای محیط تولید انتخاب شده است زیرا پایدارتر و قابل اعتمادتر است

# اتصال PostgreSQL
database.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/food_ordering_prod}
# URL اتصال به پایگاه داده PostgreSQL
# در محیط تولید، معمولاً از یک سرور جداگانه برای پایگاه داده استفاده می‌شود

database.username=${DATABASE_USERNAME:food_ordering_user}
# نام کاربری پایگاه داده - باید از متغیر محیطی خوانده شود

database.password=${DATABASE_PASSWORD:your_secure_password_here}
# رمز عبور پایگاه داده - باید از متغیر محیطی خوانده شود
# این مقدار باید در فایل .env ذخیره شود و هرگز در کد قرار نگیرد

database.driver=${DATABASE_DRIVER:org.postgresql.Driver}
# درایور JDBC برای PostgreSQL

# تنظیمات Connection Pool
database.pool.min.size=${DB_POOL_MIN:5}
# حداقل تعداد اتصالات در pool
# برای محیط تولید، حداقل 5 اتصال همیشه باز نگه داشته می‌شود

database.pool.max.size=${DB_POOL_MAX:50}
# حداکثر تعداد اتصالات در pool
# برای محیط تولید با ترافیک بالا، این مقدار افزایش یافته است

database.pool.timeout=${DB_POOL_TIMEOUT:30000}
# زمان timeout برای دریافت اتصال از pool (میلی‌ثانیه)

database.pool.idle.timeout=${DB_POOL_IDLE_TIMEOUT:600000}
# زمان timeout برای اتصالات بیکار (10 دقیقه)

database.pool.validation.query=${DB_VALIDATION_QUERY:SELECT 1}
# کوئری اعتبارسنجی برای بررسی سلامت اتصالات

# تنظیمات Migration
database.auto.migrate=${DB_AUTO_MIGRATE:false}
# آیا به صورت خودکار migration انجام شود
# در محیط تولید، migration باید به صورت دستی انجام شود

database.validate.on.migrate=${DB_VALIDATE_MIGRATE:true}
# اعتبارسنجی schema هنگام migration

# =================================================================
# تنظیمات امنیتی
# =================================================================
# پیکربندی‌های امنیتی کامل برای محیط تولید

# تنظیمات JWT
security.jwt.secret=${JWT_SECRET:your_super_secure_jwt_secret_key_minimum_256_bits_change_this_in_production}
# کلید مخفی JWT - باید حداقل 256 بیت باشد
# این مقدار باید از متغیر محیطی خوانده شود و در فایل .env ذخیره شود

security.jwt.expiration.hours=${JWT_EXPIRATION_HOURS:24}
# مدت اعتبار Access Token به ساعت
# در محیط تولید، معمولاً 24 ساعت تنظیم می‌شود

security.jwt.refresh.expiration.days=${JWT_REFRESH_EXPIRATION_DAYS:7}
# مدت اعتبار Refresh Token به روز
# برای امنیت بیشتر، معمولاً 7 روز تنظیم می‌شود

security.jwt.issuer=${JWT_ISSUER:food-ordering-system}
# نام صادرکننده JWT

# امنیت رمز عبور
security.password.bcrypt.rounds=${PASSWORD_BCRYPT_ROUNDS:12}
# تعداد دورهای bcrypt برای hash کردن رمز عبور
# برای محیط تولید، 12 دور برای امنیت بیشتر

security.password.min.length=${PASSWORD_MIN_LENGTH:8}
# حداقل طول رمز عبور

security.password.max.attempts=${PASSWORD_MAX_ATTEMPTS:5}
# حداکثر تعداد تلاش برای ورود
# پس از 5 تلاش ناموفق، حساب کاربری قفل می‌شود

security.account.lockout.minutes=${ACCOUNT_LOCKOUT_MINUTES:30}
# مدت زمان قفل شدن حساب کاربری (دقیقه)

# مدیریت Session
security.session.timeout.minutes=${SESSION_TIMEOUT_MINUTES:60}
# زمان timeout برای session (دقیقه)

security.concurrent.sessions.max=${CONCURRENT_SESSIONS_MAX:3}
# حداکثر تعداد session همزمان برای هر کاربر

# =================================================================
# تنظیمات SSL/HTTPS
# =================================================================
# پیکربندی SSL/TLS برای امنیت ارتباطات

ssl.enabled=${SSL_ENABLED:true}
# فعال‌سازی SSL/TLS
# در محیط تولید، حتماً باید فعال باشد

ssl.keystore.path=${SSL_KEYSTORE_PATH:/etc/ssl/food-ordering/keystore.jks}
# مسیر فایل keystore برای گواهی SSL

ssl.keystore.password=${SSL_KEYSTORE_PASSWORD:your_keystore_password}
# رمز عبور keystore

ssl.key.password=${SSL_KEY_PASSWORD:your_key_password}
# رمز عبور کلید خصوصی

ssl.truststore.path=${SSL_TRUSTSTORE_PATH:/etc/ssl/food-ordering/truststore.jks}
# مسیر فایل truststore

ssl.truststore.password=${SSL_TRUSTSTORE_PASSWORD:your_truststore_password}
# رمز عبور truststore

# تنظیمات امنیتی SSL
ssl.protocols=${SSL_PROTOCOLS:TLSv1.2,TLSv1.3}
# پروتکل‌های SSL مجاز
# فقط TLS 1.2 و 1.3 برای امنیت بیشتر

ssl.cipher.suites=${SSL_CIPHER_SUITES:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256}
# مجموعه‌های رمزنگاری مجاز
# فقط رمزنگاری‌های قوی و امن

ssl.require.client.auth=${SSL_REQUIRE_CLIENT_AUTH:false}
# آیا احراز هویت سمت کلاینت الزامی است

# =================================================================
# تنظیمات CORS
# =================================================================
# پیکربندی Cross-Origin Resource Sharing

cors.enabled=${CORS_ENABLED:true}
# فعال‌سازی CORS

cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com,https://admin.yourdomain.com}
# آدرس‌های مجاز برای دسترسی cross-origin
# فقط دامنه‌های معتبر و امن

cors.allowed.methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
# HTTP method های مجاز

cors.allowed.headers=${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With}
# header های مجاز

cors.allow.credentials=${CORS_ALLOW_CREDENTIALS:true}
# آیا ارسال credentials مجاز است

cors.max.age=${CORS_MAX_AGE:3600}
# مدت زمان cache کردن preflight requests (ثانیه)

# =================================================================
# تنظیمات محدودیت نرخ درخواست
# =================================================================
# پیکربندی Rate Limiting برای جلوگیری از حملات

rate.limit.enabled=${RATE_LIMIT_ENABLED:true}
# فعال‌سازی Rate Limiting

rate.limit.requests.per.minute=${RATE_LIMIT_REQUESTS_PER_MINUTE:60}
# حداکثر تعداد درخواست در دقیقه برای هر IP

rate.limit.requests.per.hour=${RATE_LIMIT_REQUESTS_PER_HOUR:1000}
# حداکثر تعداد درخواست در ساعت برای هر IP

rate.limit.burst.capacity=${RATE_LIMIT_BURST_CAPACITY:10}
# ظرفیت burst برای درخواست‌های ناگهانی

# محدودیت‌های نرخ برای API های خاص
rate.limit.auth.requests.per.minute=${RATE_LIMIT_AUTH_PER_MINUTE:10}
# محدودیت برای API های احراز هویت

rate.limit.register.requests.per.hour=${RATE_LIMIT_REGISTER_PER_HOUR:5}
# محدودیت برای ثبت‌نام (5 درخواست در ساعت)

rate.limit.order.requests.per.minute=${RATE_LIMIT_ORDER_PER_MINUTE:30}
# محدودیت برای سفارش‌ها

# =================================================================
# تنظیمات لاگ
# =================================================================
# پیکربندی سیستم لاگ برای محیط تولید

logging.level.root=${LOG_LEVEL_ROOT:INFO}
# سطح لاگ کلی سیستم
# در محیط تولید، معمولاً INFO یا WARN تنظیم می‌شود

logging.level.com.myapp=${LOG_LEVEL_APP:INFO}
# سطح لاگ برای پکیج برنامه

logging.level.hibernate=${LOG_LEVEL_HIBERNATE:WARN}
# سطح لاگ برای Hibernate
# در محیط تولید، WARN برای کاهش حجم لاگ‌ها

logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:INFO}
# سطح لاگ برای Spring Security

# تنظیمات فایل لاگ
logging.file.path=${LOG_FILE_PATH:/var/log/food-ordering}
# مسیر ذخیره فایل‌های لاگ
# در محیط تولید، معمولاً در /var/log ذخیره می‌شود

logging.file.name=${LOG_FILE_NAME:food-ordering.log}
# نام فایل لاگ اصلی

logging.file.max.size=${LOG_FILE_MAX_SIZE:100MB}
# حداکثر اندازه هر فایل لاگ

logging.file.max.history=${LOG_FILE_MAX_HISTORY:30}
# تعداد فایل‌های لاگ نگهداری شده (30 روز)

logging.file.total.size.cap=${LOG_FILE_TOTAL_SIZE_CAP:1GB}
# حداکثر اندازه کل فایل‌های لاگ

# الگوهای لاگ
logging.pattern.console=${LOG_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}
# الگوی لاگ برای کنسول

logging.pattern.file=${LOG_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n}
# الگوی لاگ برای فایل

# =================================================================
# تنظیمات نظارت و بررسی سلامت
# =================================================================
# پیکربندی monitoring و health check

monitoring.enabled=${MONITORING_ENABLED:true}
# فعال‌سازی سیستم نظارت

monitoring.health.check.interval.seconds=${HEALTH_CHECK_INTERVAL:30}
# فاصله زمانی بررسی سلامت (ثانیه)

monitoring.metrics.enabled=${METRICS_ENABLED:true}
# فعال‌سازی metrics

# Endpoint های بررسی سلامت
health.check.database.enabled=${HEALTH_CHECK_DB_ENABLED:true}
# بررسی سلامت پایگاه داده

health.check.disk.space.enabled=${HEALTH_CHECK_DISK_ENABLED:true}
# بررسی فضای دیسک

health.check.memory.enabled=${HEALTH_CHECK_MEMORY_ENABLED:true}
# بررسی حافظه

# آستانه‌های هشدار
alert.memory.usage.threshold=${ALERT_MEMORY_THRESHOLD:85}
# آستانه هشدار استفاده از حافظه (درصد)

alert.disk.usage.threshold=${ALERT_DISK_THRESHOLD:90}
# آستانه هشدار استفاده از دیسک (درصد)

alert.response.time.threshold.ms=${ALERT_RESPONSE_TIME_THRESHOLD:5000}
# آستانه هشدار زمان پاسخ (میلی‌ثانیه)

alert.error.rate.threshold=${ALERT_ERROR_RATE_THRESHOLD:5}
# آستانه هشدار نرخ خطا (درصد)

# =================================================================
# تنظیمات پشتیبان‌گیری
# =================================================================
# پیکربندی سیستم پشتیبان‌گیری خودکار

backup.enabled=${BACKUP_ENABLED:true}
# فعال‌سازی پشتیبان‌گیری خودکار

backup.schedule.cron=${BACKUP_SCHEDULE:0 2 * * *}
# زمان‌بندی پشتیبان‌گیری (Cron expression)
# هر روز ساعت 2 بامداد

backup.retention.days=${BACKUP_RETENTION_DAYS:30}
# مدت نگهداری فایل‌های پشتیبان (روز)

backup.location=${BACKUP_LOCATION:/var/backups/food-ordering}
# مسیر ذخیره فایل‌های پشتیبان

backup.compress=${BACKUP_COMPRESS:true}
# فشرده‌سازی فایل‌های پشتیبان

# تنظیمات پشتیبان‌گیری پایگاه داده
backup.database.enabled=${BACKUP_DATABASE_ENABLED:true}
# پشتیبان‌گیری از پایگاه داده

backup.database.timeout.minutes=${BACKUP_DATABASE_TIMEOUT:30}
# زمان timeout برای پشتیبان‌گیری پایگاه داده (دقیقه)

backup.file.uploads.enabled=${BACKUP_FILE_UPLOADS_ENABLED:true}
# پشتیبان‌گیری از فایل‌های آپلود شده

# =================================================================
# تنظیمات کش
# =================================================================
# پیکربندی سیستم کش برای بهبود عملکرد

cache.enabled=${CACHE_ENABLED:true}
# فعال‌سازی کش

cache.default.ttl.seconds=${CACHE_DEFAULT_TTL:3600}
# زمان زندگی پیش‌فرض کش (ثانیه) - 1 ساعت

cache.max.size=${CACHE_MAX_SIZE:10000}
# حداکثر تعداد آیتم در کش

# تنظیمات کش برای موارد خاص
cache.restaurant.ttl.seconds=${CACHE_RESTAURANT_TTL:1800}
# زمان زندگی کش رستوران‌ها (30 دقیقه)

cache.menu.ttl.seconds=${CACHE_MENU_TTL:1800}
# زمان زندگی کش منوها (30 دقیقه)

cache.user.session.ttl.seconds=${CACHE_USER_SESSION_TTL:3600}
# زمان زندگی کش session کاربران (1 ساعت)

# =================================================================
# تنظیمات ایمیل (در صورت نیاز)
# =================================================================
# پیکربندی سیستم ایمیل برای اعلان‌ها

email.enabled=${EMAIL_ENABLED:false}
# فعال‌سازی سیستم ایمیل
# در صورت نیاز به ارسال ایمیل، true شود

email.smtp.host=${EMAIL_SMTP_HOST:smtp.gmail.com}
# سرور SMTP

email.smtp.port=${EMAIL_SMTP_PORT:587}
# پورت SMTP

email.smtp.username=${EMAIL_SMTP_USERNAME:your_email@domain.com}
# نام کاربری SMTP

email.smtp.password=${EMAIL_SMTP_PASSWORD:your_email_password}
# رمز عبور SMTP

email.smtp.auth=${EMAIL_SMTP_AUTH:true}
# احراز هویت SMTP

email.smtp.starttls.enable=${EMAIL_SMTP_STARTTLS:true}
# فعال‌سازی STARTTLS

# =================================================================
# تنظیمات کسب و کار
# =================================================================
# پیکربندی‌های مربوط به منطق کسب و کار

business.order.timeout.minutes=${ORDER_TIMEOUT_MINUTES:30}
# زمان timeout برای سفارش‌ها (دقیقه)
# پس از 30 دقیقه، سفارش لغو می‌شود

business.delivery.radius.km=${DELIVERY_RADIUS_KM:10}
# شعاع تحویل (کیلومتر)

business.min.order.amount=${MIN_ORDER_AMOUNT:10000}
# حداقل مبلغ سفارش (تومان)

business.delivery.fee=${DELIVERY_FEE:5000}
# هزینه تحویل (تومان)

business.free.delivery.threshold=${FREE_DELIVERY_THRESHOLD:50000}
# آستانه سفارش رایگان (تومان)

# تنظیمات پرداخت
payment.timeout.seconds=${PAYMENT_TIMEOUT_SECONDS:300}
# زمان timeout برای پرداخت (ثانیه) - 5 دقیقه

payment.retry.attempts=${PAYMENT_RETRY_ATTEMPTS:3}
# تعداد تلاش‌های مجدد برای پرداخت

# =================================================================
# تنظیمات آپلود فایل
# =================================================================
# پیکربندی سیستم آپلود فایل

file.upload.enabled=${FILE_UPLOAD_ENABLED:true}
# فعال‌سازی آپلود فایل

file.upload.max.size.mb=${FILE_UPLOAD_MAX_SIZE_MB:10}
# حداکثر اندازه فایل (مگابایت)

file.upload.allowed.types=${FILE_UPLOAD_ALLOWED_TYPES:jpg,jpeg,png,gif,pdf}
# انواع فایل مجاز

file.upload.path=${FILE_UPLOAD_PATH:/var/uploads/food-ordering}
# مسیر ذخیره فایل‌های آپلود شده

# =================================================================
# تنظیمات عملکرد
# =================================================================
# پیکربندی‌های مربوط به بهینه‌سازی عملکرد

performance.async.pool.size=${ASYNC_POOL_SIZE:20}
# اندازه pool برای عملیات async

performance.request.timeout.seconds=${REQUEST_TIMEOUT_SECONDS:30}
# زمان timeout برای درخواست‌ها (ثانیه)

performance.max.request.size.mb=${MAX_REQUEST_SIZE_MB:10}
# حداکثر اندازه درخواست (مگابایت)

# =================================================================
# تنظیمات توسعه (در محیط تولید غیرفعال)
# =================================================================
# تنظیمات مربوط به توسعه که در محیط تولید باید غیرفعال باشند

development.mode=${DEVELOPMENT_MODE:false}
# حالت توسعه - در محیط تولید حتماً false باشد

development.auto.reload=${DEVELOPMENT_AUTO_RELOAD:false}
# بارگذاری مجدد خودکار - در محیط تولید غیرفعال

development.debug.sql=${DEVELOPMENT_DEBUG_SQL:false}
# نمایش کوئری‌های SQL - در محیط تولید غیرفعال

development.mock.external.apis=${DEVELOPMENT_MOCK_APIS:false}
# شبیه‌سازی API های خارجی - در محیط تولید غیرفعال 