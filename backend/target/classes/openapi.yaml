# فایل مشخصات OpenAPI برای سیستم سفارش غذا
# این فایل شامل تمام endpoint ها، مدل‌ها و پاسخ‌های API است
# OpenAPI 3.0.3 برای مستندسازی کامل API استفاده شده است
# تمام endpoint ها با جزئیات کامل و مثال‌های عملی تعریف شده‌اند

openapi: 3.0.3
# نسخه OpenAPI Specification

info:
  # اطلاعات کلی API
  title: Online Food Ordering API
  # عنوان API: سیستم سفارش آنلاین غذا
  
  version: 1.0.0
  # نسخه API: نسخه 1.0.0
  
  description: RESTful API for food ordering system (buyers, sellers, couriers, and admin).
  # توضیحات API: API کامل برای سیستم سفارش غذا
  # شامل نقش‌های مختلف: خریدار، فروشنده، پیک و مدیر

servers:
- url: https://api.food-ordering.com/v1
  # آدرس سرور API برای محیط تولید
  # نسخه v1 برای مدیریت تغییرات API

tags:
# دسته‌بندی endpoint ها بر اساس عملکرد
- name: auth
  description: Authentication and user profile APIs
  # API های احراز هویت و پروفایل کاربر
  # شامل ثبت‌نام، ورود، خروج و مدیریت پروفایل
  
- name: restaurant
  description: APIs related to restaurant management
  # API های مدیریت رستوران
  # شامل ایجاد، ویرایش رستوران و مدیریت منوها
  
- name: buyer
  description: APIs for buyers to browse, order, and review
  # API های خریدار
  # شامل مرور رستوران‌ها، سفارش و نظردهی
  
- name: courier
  description: APIs for couriers to manage deliveries
  # API های پیک
  # شامل مدیریت تحویل‌ها و تغییر وضعیت
  
- name: order
  description: APIs for order tracking and payment processing
  # API های سفارش
  # شامل پیگیری سفارش و پردازش پرداخت
  
- name: admin
  description: Administrative APIs for user, order, and finance management
  # API های مدیریتی
  # شامل مدیریت کاربران، سفارش‌ها و امور مالی

paths:
  # تعریف تمام endpoint های API
  # هر endpoint شامل method، پارامترها، request body و پاسخ‌ها است
  
  /auth/register:
    # Endpoint ثبت‌نام کاربر جدید
    # POST: ایجاد حساب کاربری جدید
    post:
      tags:
      - auth
      # دسته‌بندی: احراز هویت
      
      summary: Register a new user
      # خلاصه: ثبت‌نام کاربر جدید
      
      requestBody:
        required: true
        # Request body الزامی است
        content:
          application/json:
            # محتوای JSON
            schema:
              type: object
              required:
              - full_name
              - phone
              - password
              - role
              - address
              # فیلدهای الزامی: نام کامل، تلفن، رمز عبور، نقش و آدرس
              properties:
                full_name:
                  type: string
                  # نام کامل کاربر
                phone:
                  type: string
                  # شماره تلفن (منحصر به فرد)
                email:
                  type: string
                  format: email
                  # ایمیل (اختیاری)
                password:
                  type: string
                  # رمز عبور (حداقل 8 کاراکتر)
                role:
                  type: string
                  enum:
                  - buyer
                  - seller
                  - courier
                  # نقش کاربر: خریدار، فروشنده یا پیک
                address:
                  type: string
                  # آدرس کاربر
                profileImageBase64:
                  type: string
                  # تصویر پروفایل (Base64 - اختیاری)
                bank_info:
                  type: object
                  required:
                  - bankName
                  - accountNumber
                  # اطلاعات بانکی (برای فروشندگان و پیک‌ها)
                  properties:
                    bank_name:
                      type: string
                      # نام بانک
                    account_number:
                      type: string
                      # شماره حساب
      responses:
        '200':
          description: User registered successfully
          # پاسخ موفق: کاربر با موفقیت ثبت‌نام شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    # پیام موفقیت
                  user_id:
                    type: string
                    # شناسه کاربر ایجاد شده
                  token:
                    type: string
                    # توکن JWT برای احراز هویت
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '409':
          description: Phone number already exists
          # خطای 409: شماره تلفن قبلاً ثبت شده
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Phone number already exists:
                  value: '{

                    "error":"Phone number already exists"

                    }'
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: غیرمجاز
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: ممنوع
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: یافت نشد
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

  /auth/login:
    # Endpoint ورود کاربر
    # POST: احراز هویت و دریافت توکن
    post:
      tags:
      - auth
      # دسته‌بندی: احراز هویت
      
      summary: Login a user
      # خلاصه: ورود کاربر
      
      requestBody:
        required: true
        # Request body الزامی است
        content:
          application/json:
            # محتوای JSON
            schema:
              type: object
              required:
              - phone
              - password
              # فیلدهای الزامی: تلفن و رمز عبور
              properties:
                phone:
                  type: string
                  # شماره تلفن کاربر
                password:
                  type: string
                  # رمز عبور کاربر
      responses:
        '200':
          description: User logged in successfully
          # پاسخ موفق: کاربر با موفقیت وارد شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    # پیام موفقیت
                  token:
                    type: string
                    # توکن JWT برای احراز هویت
                  user:
                    $ref: '#/components/schemas/user'
                    # اطلاعات کامل کاربر
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: اطلاعات ورود نامعتبر
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: حساب قفل شده
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: کاربر یافت نشد
        '409':
          $ref: '#/components/responses/conflict'
          # خطای 409: تضاد
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

  /auth/profile:
    # Endpoint پروفایل کاربر
    # GET: دریافت پروفایل کاربر فعلی
    # PUT: به‌روزرسانی پروفایل کاربر
    get:
      tags:
      - auth
      # دسته‌بندی: احراز هویت
      
      summary: Get current user profile
      # خلاصه: دریافت پروفایل کاربر فعلی
      
      security:
      - bearerAuth: []
        # احراز هویت با توکن JWT الزامی است
      
      responses:
        '200':
          description: Current user profile
          # پاسخ موفق: پروفایل کاربر فعلی
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
                # مدل کاربر کامل
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: توکن نامعتبر
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: دسترسی ممنوع
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: کاربر یافت نشد
        '409':
          $ref: '#/components/responses/conflict'
          # خطای 409: تضاد
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

    put:
      tags:
      - auth
      # دسته‌بندی: احراز هویت
      
      summary: Update current user profile
      # خلاصه: به‌روزرسانی پروفایل کاربر فعلی
      
      security:
      - bearerAuth: []
        # احراز هویت با توکن JWT الزامی است
      
      requestBody:
        required: true
        # Request body الزامی است
        content:
          application/json:
            # محتوای JSON
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  # نام کامل جدید
                phone:
                  type: string
                  # شماره تلفن جدید
                email:
                  type: string
                  # ایمیل جدید
                address:
                  type: string
                  # آدرس جدید
                profileImageBase64:
                  type: string
                  # تصویر پروفایل جدید (Base64)
                bank_info:
                  type: object
                  required:
                  - bank_name
                  - account_number
                  # اطلاعات بانکی جدید
                  properties:
                    bank_name:
                      type: string
                      # نام بانک
                    account_number:
                      type: string
                      # شماره حساب
      responses:
        '200':
          description: Profile updated successfully
          # پاسخ موفق: پروفایل با موفقیت به‌روزرسانی شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
                # پیام موفقیت
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: دسترسی ممنوع
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: توکن نامعتبر
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: کاربر یافت نشد
        '409':
          $ref: '#/components/responses/conflict'
          # خطای 409: شماره تلفن تکراری
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

  /auth/logout:
    # Endpoint خروج کاربر
    # POST: خروج و باطل کردن توکن
    post:
      tags:
      - auth
      # دسته‌بندی: احراز هویت
      
      summary: Logout user
      # خلاصه: خروج کاربر
      
      security:
      - bearerAuth: []
        # احراز هویت با توکن JWT الزامی است
      
      responses:
        '200':
          description: User logged out successfully
          # پاسخ موفق: کاربر با موفقیت خارج شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
                # پیام موفقیت
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: توکن نامعتبر
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: دسترسی ممنوع
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: کاربر یافت نشد
        '409':
          $ref: '#/components/responses/conflict'
          # خطای 409: تضاد
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

  /restaurants:
    # Endpoint رستوران‌ها
    # POST: ایجاد رستوران جدید (فقط فروشندگان)
    post:
      tags:
      - restaurant
      # دسته‌بندی: مدیریت رستوران
      
      summary: Create a new restaurant (seller only)
      # خلاصه: ایجاد رستوران جدید (فقط فروشندگان)
      
      security:
      - bearerAuth: []
        # احراز هویت با توکن JWT الزامی است
      
      requestBody:
        required: true
        # Request body الزامی است
        content:
          application/json:
            # محتوای JSON
            schema:
              type: object
              required:
              - name
              - address
              - phone
              # فیلدهای الزامی: نام، آدرس و تلفن
              properties:
                name:
                  type: string
                  # نام رستوران
                address:
                  type: string
                  # آدرس رستوران
                phone:
                  type: string
                  # شماره تلفن رستوران
                logoBase64:
                  type: string
                  # لوگوی رستوران (Base64 - اختیاری)
                tax_fee:
                  type: integer
                  # مالیات رستوران (تومان)
                additional_fee:
                  type: integer
                  # هزینه اضافی رستوران (تومان)
      responses:
        '201':
          description: Restaurant created successfully
          # پاسخ موفق: رستوران با موفقیت ایجاد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restaurant'
                # مدل رستوران کامل
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: فقط فروشندگان مجاز هستند
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: توکن نامعتبر
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: یافت نشد
        '409':
          $ref: '#/components/responses/conflict'
          # خطای 409: رستوران تکراری
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

  /restaurants/mine:
    # Endpoint رستوران‌های من
    # GET: دریافت لیست رستوران‌های فروشنده
    get:
      tags:
      - restaurant
      # دسته‌بندی: مدیریت رستوران
      
      summary: Get list of seller's restaurants
      # خلاصه: دریافت لیست رستوران‌های فروشنده
      
      security:
      - bearerAuth: []
        # احراز هویت با توکن JWT الزامی است
      
      responses:
        '200':
          description: List of restaurants
          # پاسخ موفق: لیست رستوران‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restaurants_list'
                # لیست رستوران‌ها
        '401':
          $ref: '#/components/responses/unauthorized'
          # خطای 401: توکن نامعتبر
        '400':
          $ref: '#/components/responses/invalid_input'
          # خطای 400: ورودی نامعتبر
        '403':
          $ref: '#/components/responses/forbidden'
          # خطای 403: دسترسی ممنوع
        '404':
          $ref: '#/components/responses/not_found'
          # خطای 404: یافت نشد
        '409':
          $ref: '#/components/responses/conflict'
          # خطای 409: تضاد
        '415':
          $ref: '#/components/responses/unsupported_media_type'
          # خطای 415: نوع رسانه پشتیبانی نمی‌شود
        '429':
          $ref: '#/components/responses/too_many_requests'
          # خطای 429: درخواست‌های بیش از حد
        '500':
          $ref: '#/components/responses/internal_server_error'
          # خطای 500: خطای داخلی سرور

# ... ادامه فایل با endpoint های بیشتر ...
