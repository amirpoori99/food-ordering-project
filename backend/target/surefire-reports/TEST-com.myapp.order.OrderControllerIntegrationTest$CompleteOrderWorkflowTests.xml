<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.myapp.order.OrderControllerIntegrationTest$CompleteOrderWorkflowTests" time="0.506" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\USER\Desktop\work space\food-ordering-project\backend\target\test-classes;C:\Users\USER\Desktop\work space\food-ordering-project\backend\target\classes;C:\Users\USER\.m2\repository\org\hibernate\orm\hibernate-core\6.4.0.Final\hibernate-core-6.4.0.Final.jar;C:\Users\USER\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USER\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USER\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\USER\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\USER\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\USER\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\USER\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\USER\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\USER\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\USER\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\USER\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\USER\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\USER\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\USER\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\USER\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USER\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USER\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.2.13.Final\hibernate-community-dialects-6.2.13.Final.jar;C:\Users\USER\.m2\repository\org\xerial\sqlite-jdbc\3.44.0.0\sqlite-jdbc-3.44.0.0.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\USER\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\USER\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\USER\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\USER\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\USER\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.3\jjwt-api-0.12.3.jar;C:\Users\USER\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.3\jjwt-impl-0.12.3.jar;C:\Users\USER\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.3\jjwt-jackson-0.12.3.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.0\junit-jupiter-5.10.0.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.0\junit-jupiter-api-5.10.0.jar;C:\Users\USER\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\USER\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\USER\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.0\junit-jupiter-params-5.10.0.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\USER\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\USER\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\USER\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.9\byte-buddy-agent-1.14.9.jar;C:\Users\USER\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\USER\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\USER\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\USER\.m2\repository\org\testcontainers\junit-jupiter\1.19.3\junit-jupiter-1.19.3.jar;C:\Users\USER\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\USER\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\USER\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\USER\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\USER\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\USER\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\USER\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\USER\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\USER\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\USER\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\USER\.m2\repository\com\squareup\okhttp3\mockwebserver\4.11.0\mockwebserver-4.11.0.jar;C:\Users\USER\.m2\repository\com\squareup\okhttp3\okhttp\4.11.0\okhttp-4.11.0.jar;C:\Users\USER\.m2\repository\com\squareup\okio\okio\3.2.0\okio-3.2.0.jar;C:\Users\USER\.m2\repository\com\squareup\okio\okio-jvm\3.2.0\okio-jvm-3.2.0.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.6.20\kotlin-stdlib-1.6.20.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.6.20\kotlin-stdlib-common-1.6.20.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.6.10\kotlin-stdlib-jdk8-1.6.10.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.6.10\kotlin-stdlib-jdk7-1.6.10.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Asia/Tehran"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\USER\AppData\Local\Temp\surefire8236851155724109824\surefirebooter-20250703070855672_3.jar C:\Users\USER\AppData\Local\Temp\surefire8236851155724109824 2025-07-03T07-08-55_112-jvmRun1 surefire-20250703070855672_1tmp surefire_0-20250703070855672_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\USER\Desktop\work space\food-ordering-project\backend\target\test-classes;C:\Users\USER\Desktop\work space\food-ordering-project\backend\target\classes;C:\Users\USER\.m2\repository\org\hibernate\orm\hibernate-core\6.4.0.Final\hibernate-core-6.4.0.Final.jar;C:\Users\USER\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\USER\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\USER\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\USER\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\USER\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\USER\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\USER\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\USER\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\USER\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\USER\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\USER\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\USER\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\USER\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\USER\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\USER\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\USER\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\USER\.m2\repository\org\hibernate\orm\hibernate-community-dialects\6.2.13.Final\hibernate-community-dialects-6.2.13.Final.jar;C:\Users\USER\.m2\repository\org\xerial\sqlite-jdbc\3.44.0.0\sqlite-jdbc-3.44.0.0.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\USER\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\USER\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\USER\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\USER\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\USER\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.3\jjwt-api-0.12.3.jar;C:\Users\USER\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.3\jjwt-impl-0.12.3.jar;C:\Users\USER\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.3\jjwt-jackson-0.12.3.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.0\junit-jupiter-5.10.0.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.0\junit-jupiter-api-5.10.0.jar;C:\Users\USER\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\USER\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\USER\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.0\junit-jupiter-params-5.10.0.jar;C:\Users\USER\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\USER\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\USER\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\USER\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.9\byte-buddy-agent-1.14.9.jar;C:\Users\USER\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\USER\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\USER\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\USER\.m2\repository\org\testcontainers\junit-jupiter\1.19.3\junit-jupiter-1.19.3.jar;C:\Users\USER\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\USER\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\USER\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\USER\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\USER\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\USER\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\USER\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\USER\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\USER\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\USER\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\USER\.m2\repository\com\squareup\okhttp3\mockwebserver\4.11.0\mockwebserver-4.11.0.jar;C:\Users\USER\.m2\repository\com\squareup\okhttp3\okhttp\4.11.0\okhttp-4.11.0.jar;C:\Users\USER\.m2\repository\com\squareup\okio\okio\3.2.0\okio-3.2.0.jar;C:\Users\USER\.m2\repository\com\squareup\okio\okio-jvm\3.2.0\okio-jvm-3.2.0.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.6.20\kotlin-stdlib-1.6.20.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.6.20\kotlin-stdlib-common-1.6.20.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.6.10\kotlin-stdlib-jdk8-1.6.10.jar;C:\Users\USER\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.6.10\kotlin-stdlib-jdk7-1.6.10.jar;C:\Users\USER\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\USER"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot"/>
    <property name="spring.profiles.active" value="test"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\USER\Desktop\work space\food-ordering-project\backend"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\USER\AppData\Local\Temp\surefire8236851155724109824\surefirebooter-20250703070855672_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.14+7"/>
    <property name="user.name" value="USER"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.14+7"/>
    <property name="localRepository" value="C:\Users\USER\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\USER\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.14"/>
    <property name="user.dir" value="C:\Users\USER\Desktop\work space\food-ordering-project\backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\mingw64\mingw64\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files (x86)\AOMEI;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft VS Code\bin;C:\mingw64\mingw64\bin;C:\raylib-master\src;C:\Program Files\Git\cmd;C:\Program Files\Redis\;C:\Users\USER\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\USER\AppData\Local\Programs\Python\Python313\;C:\Users\USER\AppData\Local\Programs\Python\Launcher\;C:\Users\USER\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\USER\AppData\Local\Programs\Python\Python312\;C:\Users\USER\AppData\Local\Microsoft\WindowsApps;C:\mingw64\mingw64\bin;C:\raylib-master\src;C:\Program Files\Java\jdk-23\bin;C:\modeltech64_2020.4\win64;C:\apache-maven\apache-maven-3.9.9\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2025.1.1.1\bin;;C:\Users\USER\AppData\Local\Programs\cursor\resources\app\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.14+7"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="completeOrderLifecycle_FullWorkflow_Success" classname="com.myapp.order.OrderControllerIntegrationTest$CompleteOrderWorkflowTests" time="0.269">
    <system-out><![CDATA[2025-07-03 07:10:04.398 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        notifications
Hibernate: 
    delete 
    from
        notifications
2025-07-03 07:10:04.399 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        ratings
Hibernate: 
    delete 
    from
        ratings
2025-07-03 07:10:04.399 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        order_items
Hibernate: 
    delete 
    from
        order_items
2025-07-03 07:10:04.399 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        orders
Hibernate: 
    delete 
    from
        orders
2025-07-03 07:10:04.399 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        food_items
Hibernate: 
    delete 
    from
        food_items
2025-07-03 07:10:04.399 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        restaurants
Hibernate: 
    delete 
    from
        restaurants
2025-07-03 07:10:04.399 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        users
Hibernate: 
    delete 
    from
        users
2025-07-03 07:10:04.400 [main] DEBUG c.myapp.common.TestDatabaseManager - Cleaned all test data from database
2025-07-03 07:10:04.400 [main] DEBUG c.myapp.common.TestDatabaseManager - Test database cleanup completed
🚀 شروع تست چرخه کامل زندگی سفارش
📋 مرحله 1: آماده‌سازی داده‌های تست
🔨 شروع ایجاد کاربر تست با ایمیل: customer@test.com
🔄 تلاش شماره 1 از 3 برای ذخیره کاربر
2025-07-03 07:10:04.508 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
Hibernate: 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
2025-07-03 07:10:04.509 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
✅ کاربر تست با موفقیت ذخیره شد - ID: 13558, ایمیل: customer@test.com
🏪 شروع ایجاد رستوران تست با نام: رستوران تست
🔨 شروع ایجاد کاربر تست با ایمیل: restaurant.owner.1751514004510@test.com
🔄 تلاش شماره 1 از 3 برای ذخیره کاربر
2025-07-03 07:10:04.510 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
Hibernate: 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
2025-07-03 07:10:04.511 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
✅ کاربر تست با موفقیت ذخیره شد - ID: 13559, ایمیل: restaurant.owner.1751514004510@test.com
👤 مالک رستوران ایجاد شد - ID: 13559
💾 تلاش برای ذخیره رستوران در پایگاه داده...
🔄 تلاش شماره 1 از 3 برای ذخیره رستوران
2025-07-03 07:10:04.512 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        restaurants
        (address, name, owner_id, phone, status, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        restaurants
        (address, name, owner_id, phone, status, id) 
    values
        (?, ?, ?, ?, ?, ?)
✅ رستوران با موفقیت ذخیره شد - ID: 2233
2025-07-03 07:10:04.513 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
✅ تأیید: رستوران قابل بازیابی است
🍕 شروع ایجاد آیتم غذا تست: پیتزا - قیمت: 25.99
💾 تلاش برای ذخیره آیتم غذا در پایگاه داده...
🔄 تلاش شماره 1 از 3 برای ذخیره آیتم غذا
2025-07-03 07:10:04.514 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        food_items
        (available, category, description, image_url, keywords, name, price, quantity, restaurant_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        food_items
        (available, category, description, image_url, keywords, name, price, quantity, restaurant_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
✅ آیتم غذا با موفقیت ذخیره شد - ID: 5575
2025-07-03 07:10:04.515 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
✅ تأیید: آیتم غذا قابل بازیابی است
🍕 شروع ایجاد آیتم غذا تست: برگر - قیمت: 18.99
💾 تلاش برای ذخیره آیتم غذا در پایگاه داده...
🔄 تلاش شماره 1 از 3 برای ذخیره آیتم غذا
2025-07-03 07:10:04.515 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        food_items
        (available, category, description, image_url, keywords, name, price, quantity, restaurant_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        food_items
        (available, category, description, image_url, keywords, name, price, quantity, restaurant_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
✅ آیتم غذا با موفقیت ذخیره شد - ID: 5576
2025-07-03 07:10:04.516 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
✅ تأیید: آیتم غذا قابل بازیابی است
🛒 مرحله 2: ایجاد سفارش اولیه
2025-07-03 07:10:04.516 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
2025-07-03 07:10:04.517 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (actual_delivery_time, customer_id, delivery_address, estimated_delivery_time, notes, order_date, phone, restaurant_id, status, total_amount, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        orders
        (actual_delivery_time, customer_id, delivery_address, estimated_delivery_time, notes, order_date, phone, restaurant_id, status, total_amount, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
✅ سفارش با موفقیت ایجاد شد - ID: 229
🍕 مرحله 3: اضافه کردن آیتم‌ها به سبد خرید
2025-07-03 07:10:04.518 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.519 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.520 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.521 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        order_items
        (food_item_id, order_id, price, quantity, id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        order_items
        (food_item_id, order_id, price, quantity, id) 
    values
        (?, ?, ?, ?, ?)
2025-07-03 07:10:04.521 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.522 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.523 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.523 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.524 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        order_items
        (food_item_id, order_id, price, quantity, id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        order_items
        (food_item_id, order_id, price, quantity, id) 
    values
        (?, ?, ?, ?, ?)
2025-07-03 07:10:04.524 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.525 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
✅ آیتم‌ها با موفقیت اضافه شدند
🔄 مرحله 4: به‌روزرسانی تعداد آیتم
2025-07-03 07:10:04.526 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.527 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.528 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.529 [main] DEBUG org.hibernate.SQL - 
    update
        order_items 
    set
        food_item_id=?,
        order_id=?,
        price=?,
        quantity=? 
    where
        id=?
Hibernate: 
    update
        order_items 
    set
        food_item_id=?,
        order_id=?,
        price=?,
        quantity=? 
    where
        id=?
2025-07-03 07:10:04.529 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.530 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
✅ تعداد آیتم با موفقیت به‌روزرسانی شد
📝 مرحله 5: ثبت نهایی سفارش
2025-07-03 07:10:04.531 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.531 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.531 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.532 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.532 [main] DEBUG org.hibernate.SQL - 
    update
        food_items 
    set
        available=?,
        category=?,
        description=?,
        image_url=?,
        keywords=?,
        name=?,
        price=?,
        quantity=?,
        restaurant_id=? 
    where
        id=?
Hibernate: 
    update
        food_items 
    set
        available=?,
        category=?,
        description=?,
        image_url=?,
        keywords=?,
        name=?,
        price=?,
        quantity=?,
        restaurant_id=? 
    where
        id=?
2025-07-03 07:10:04.533 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.533 [main] DEBUG org.hibernate.SQL - 
    update
        food_items 
    set
        available=?,
        category=?,
        description=?,
        image_url=?,
        keywords=?,
        name=?,
        price=?,
        quantity=?,
        restaurant_id=? 
    where
        id=?
Hibernate: 
    update
        food_items 
    set
        available=?,
        category=?,
        description=?,
        image_url=?,
        keywords=?,
        name=?,
        price=?,
        quantity=?,
        restaurant_id=? 
    where
        id=?
2025-07-03 07:10:04.534 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.535 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
✅ سفارش با موفقیت ثبت شد
⚙️ مرحله 6: پردازش سفارش در مراحل مختلف
2025-07-03 07:10:04.536 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
⚠️  مشکل در تغییر وضعیت به CONFIRMED: Invalid status transition from CONFIRMED to CONFIRMED
2025-07-03 07:10:04.537 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.538 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-07-03 07:10:04.538 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.539 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
✅ وضعیت سفارش به PREPARING تغییر کرد
2025-07-03 07:10:04.541 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.541 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-07-03 07:10:04.542 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.544 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
✅ وضعیت سفارش به READY تغییر کرد
2025-07-03 07:10:04.544 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.545 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-07-03 07:10:04.546 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.547 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
✅ وضعیت سفارش به OUT_FOR_DELIVERY تغییر کرد
2025-07-03 07:10:04.548 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.548 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.549 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
✅ وضعیت سفارش به DELIVERED تغییر کرد
2025-07-03 07:10:04.550 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
🎉 تست چرخه کامل زندگی سفارش با موفقیت تکمیل شد
2025-07-03 07:10:04.551 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        notifications
Hibernate: 
    delete 
    from
        notifications
2025-07-03 07:10:04.551 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        ratings
Hibernate: 
    delete 
    from
        ratings
2025-07-03 07:10:04.551 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        order_items
Hibernate: 
    delete 
    from
        order_items
2025-07-03 07:10:04.551 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        orders
Hibernate: 
    delete 
    from
        orders
2025-07-03 07:10:04.551 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        food_items
Hibernate: 
    delete 
    from
        food_items
2025-07-03 07:10:04.552 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        restaurants
Hibernate: 
    delete 
    from
        restaurants
2025-07-03 07:10:04.552 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        users
Hibernate: 
    delete 
    from
        users
2025-07-03 07:10:04.552 [main] DEBUG c.myapp.common.TestDatabaseManager - Cleaned all test data from database
2025-07-03 07:10:04.553 [main] DEBUG c.myapp.common.TestDatabaseManager - Test database cleanup completed
]]></system-out>
  </testcase>
  <testcase name="orderCancellation_FullWorkflow_Success" classname="com.myapp.order.OrderControllerIntegrationTest$CompleteOrderWorkflowTests" time="0.237">
    <system-out><![CDATA[2025-07-03 07:10:04.668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        notifications
Hibernate: 
    delete 
    from
        notifications
2025-07-03 07:10:04.668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        ratings
Hibernate: 
    delete 
    from
        ratings
2025-07-03 07:10:04.668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        order_items
Hibernate: 
    delete 
    from
        order_items
2025-07-03 07:10:04.668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        orders
Hibernate: 
    delete 
    from
        orders
2025-07-03 07:10:04.668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        food_items
Hibernate: 
    delete 
    from
        food_items
2025-07-03 07:10:04.668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        restaurants
Hibernate: 
    delete 
    from
        restaurants
2025-07-03 07:10:04.669 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        users
Hibernate: 
    delete 
    from
        users
2025-07-03 07:10:04.670 [main] DEBUG c.myapp.common.TestDatabaseManager - Cleaned all test data from database
2025-07-03 07:10:04.670 [main] DEBUG c.myapp.common.TestDatabaseManager - Test database cleanup completed
🚀 شروع تست گردش کار لغو سفارش
🔨 شروع ایجاد کاربر تست با ایمیل: customer.cancel@test.com
🔄 تلاش شماره 1 از 3 برای ذخیره کاربر
2025-07-03 07:10:04.779 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
Hibernate: 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
2025-07-03 07:10:04.780 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
✅ کاربر تست با موفقیت ذخیره شد - ID: 13560, ایمیل: customer.cancel@test.com
🏪 شروع ایجاد رستوران تست با نام: رستوران لغو
🔨 شروع ایجاد کاربر تست با ایمیل: restaurant.owner.1751514004781@test.com
🔄 تلاش شماره 1 از 3 برای ذخیره کاربر
2025-07-03 07:10:04.782 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
Hibernate: 
    select
        u1_0.id,
        u1_0.address,
        u1_0.email,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.phone=?
2025-07-03 07:10:04.782 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (address, email, full_name, is_active, password_hash, phone, role, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
✅ کاربر تست با موفقیت ذخیره شد - ID: 13561, ایمیل: restaurant.owner.1751514004781@test.com
👤 مالک رستوران ایجاد شد - ID: 13561
💾 تلاش برای ذخیره رستوران در پایگاه داده...
🔄 تلاش شماره 1 از 3 برای ذخیره رستوران
2025-07-03 07:10:04.783 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        restaurants
        (address, name, owner_id, phone, status, id) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        restaurants
        (address, name, owner_id, phone, status, id) 
    values
        (?, ?, ?, ?, ?, ?)
✅ رستوران با موفقیت ذخیره شد - ID: 2234
2025-07-03 07:10:04.784 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
✅ تأیید: رستوران قابل بازیابی است
2025-07-03 07:10:04.785 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone,
        r1_0.status 
    from
        restaurants r1_0 
    where
        r1_0.id=?
2025-07-03 07:10:04.785 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (actual_delivery_time, customer_id, delivery_address, estimated_delivery_time, notes, order_date, phone, restaurant_id, status, total_amount, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        orders
        (actual_delivery_time, customer_id, delivery_address, estimated_delivery_time, notes, order_date, phone, restaurant_id, status, total_amount, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
🍕 شروع ایجاد آیتم غذا تست: پیتزا لغو - قیمت: 25.99
💾 تلاش برای ذخیره آیتم غذا در پایگاه داده...
🔄 تلاش شماره 1 از 3 برای ذخیره آیتم غذا
2025-07-03 07:10:04.786 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        food_items
        (available, category, description, image_url, keywords, name, price, quantity, restaurant_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        food_items
        (available, category, description, image_url, keywords, name, price, quantity, restaurant_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
✅ آیتم غذا با موفقیت ذخیره شد - ID: 5577
2025-07-03 07:10:04.787 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
✅ تأیید: آیتم غذا قابل بازیابی است
2025-07-03 07:10:04.788 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.788 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.788 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.789 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        order_items
        (food_item_id, order_id, price, quantity, id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        order_items
        (food_item_id, order_id, price, quantity, id) 
    values
        (?, ?, ?, ?, ?)
2025-07-03 07:10:04.789 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.791 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.791 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.791 [main] DEBUG org.hibernate.SQL - 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
Hibernate: 
    select
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id 
    from
        food_items fi1_0 
    where
        fi1_0.id=?
2025-07-03 07:10:04.792 [main] DEBUG org.hibernate.SQL - 
    update
        food_items 
    set
        available=?,
        category=?,
        description=?,
        image_url=?,
        keywords=?,
        name=?,
        price=?,
        quantity=?,
        restaurant_id=? 
    where
        id=?
Hibernate: 
    update
        food_items 
    set
        available=?,
        category=?,
        description=?,
        image_url=?,
        keywords=?,
        name=?,
        price=?,
        quantity=?,
        restaurant_id=? 
    where
        id=?
2025-07-03 07:10:04.793 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.794 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
❌ لغو سفارش
2025-07-03 07:10:04.795 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.795 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-07-03 07:10:04.796 [main] DEBUG org.hibernate.SQL - 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
Hibernate: 
    update
        orders 
    set
        actual_delivery_time=?,
        customer_id=?,
        delivery_address=?,
        estimated_delivery_time=?,
        notes=?,
        order_date=?,
        phone=?,
        restaurant_id=?,
        status=?,
        total_amount=? 
    where
        id=?
2025-07-03 07:10:04.797 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        oi1_0.price,
        oi1_0.quantity 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    where
        o1_0.id=?
2025-07-03 07:10:04.798 [main] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.actual_delivery_time,
        o1_0.customer_id,
        o1_0.delivery_address,
        o1_0.estimated_delivery_time,
        o1_0.notes,
        o1_0.order_date,
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.food_item_id,
        fi1_0.id,
        fi1_0.available,
        fi1_0.category,
        fi1_0.description,
        fi1_0.image_url,
        fi1_0.keywords,
        fi1_0.name,
        fi1_0.price,
        fi1_0.quantity,
        fi1_0.restaurant_id,
        oi1_0.price,
        oi1_0.quantity,
        o1_0.phone,
        o1_0.restaurant_id,
        o1_0.status,
        o1_0.total_amount 
    from
        orders o1_0 
    left join
        order_items oi1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        food_items fi1_0 
            on fi1_0.id=oi1_0.food_item_id 
    where
        o1_0.id=?
✅ سفارش با موفقیت لغو شد
🎉 تست لغو سفارش تکمیل شد
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        notifications
Hibernate: 
    delete 
    from
        notifications
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        ratings
Hibernate: 
    delete 
    from
        ratings
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        order_items
Hibernate: 
    delete 
    from
        order_items
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        orders
Hibernate: 
    delete 
    from
        orders
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        food_items
Hibernate: 
    delete 
    from
        food_items
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        restaurants
Hibernate: 
    delete 
    from
        restaurants
2025-07-03 07:10:04.799 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        users
Hibernate: 
    delete 
    from
        users
2025-07-03 07:10:04.800 [main] DEBUG c.myapp.common.TestDatabaseManager - Cleaned all test data from database
2025-07-03 07:10:04.800 [main] DEBUG c.myapp.common.TestDatabaseManager - Test database cleanup completed
]]></system-out>
  </testcase>
</testsuite>