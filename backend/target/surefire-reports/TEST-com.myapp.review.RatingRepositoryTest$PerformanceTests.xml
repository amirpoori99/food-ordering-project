<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.myapp.review.RatingRepositoryTest$PerformanceTests" time="0.176" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/workspace/backend/target/test-classes:/workspace/backend/target/classes:/home/ubuntu/.m2/repository/org/hibernate/orm/hibernate-core/6.4.0.Final/hibernate-core-6.4.0.Final.jar:/home/ubuntu/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/ubuntu/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/ubuntu/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/home/ubuntu/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/ubuntu/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/ubuntu/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/ubuntu/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/home/ubuntu/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/ubuntu/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/home/ubuntu/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/home/ubuntu/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/home/ubuntu/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/home/ubuntu/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/home/ubuntu/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/home/ubuntu/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/ubuntu/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/ubuntu/.m2/repository/org/hibernate/orm/hibernate-community-dialects/6.2.13.Final/hibernate-community-dialects-6.2.13.Final.jar:/home/ubuntu/.m2/repository/org/xerial/sqlite-jdbc/3.44.0.0/sqlite-jdbc-3.44.0.0.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/ubuntu/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/ubuntu/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/home/ubuntu/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/home/ubuntu/.m2/repository/org/mindrot/jbcrypt/0.4/jbcrypt-0.4.jar:/home/ubuntu/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/home/ubuntu/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/home/ubuntu/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.0/junit-jupiter-5.10.0.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/home/ubuntu/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/ubuntu/.m2/repository/org/junit/platform/junit-platform-commons/1.10.0/junit-platform-commons-1.10.0.jar:/home/ubuntu/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.0/junit-jupiter-params-5.10.0.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.0/junit-jupiter-engine-5.10.0.jar:/home/ubuntu/.m2/repository/org/junit/platform/junit-platform-engine/1.10.0/junit-platform-engine-1.10.0.jar:/home/ubuntu/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/ubuntu/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.9/byte-buddy-agent-1.14.9.jar:/home/ubuntu/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/ubuntu/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/ubuntu/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/ubuntu/.m2/repository/org/testcontainers/junit-jupiter/1.19.3/junit-jupiter-1.19.3.jar:/home/ubuntu/.m2/repository/org/testcontainers/testcontainers/1.19.3/testcontainers-1.19.3.jar:/home/ubuntu/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/ubuntu/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/ubuntu/.m2/repository/org/apache/commons/commons-compress/1.24.0/commons-compress-1.24.0.jar:/home/ubuntu/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/ubuntu/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/ubuntu/.m2/repository/com/github/docker-java/docker-java-api/3.3.4/docker-java-api-3.3.4.jar:/home/ubuntu/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.4/docker-java-transport-zerodep-3.3.4.jar:/home/ubuntu/.m2/repository/com/github/docker-java/docker-java-transport/3.3.4/docker-java-transport-3.3.4.jar:/home/ubuntu/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/home/ubuntu/.m2/repository/com/squareup/okhttp3/mockwebserver/4.11.0/mockwebserver-4.11.0.jar:/home/ubuntu/.m2/repository/com/squareup/okhttp3/okhttp/4.11.0/okhttp-4.11.0.jar:/home/ubuntu/.m2/repository/com/squareup/okio/okio/3.2.0/okio-3.2.0.jar:/home/ubuntu/.m2/repository/com/squareup/okio/okio-jvm/3.2.0/okio-jvm-3.2.0.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.6.20/kotlin-stdlib-1.6.20.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.6.20/kotlin-stdlib-common-1.6.20.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.6.10/kotlin-stdlib-jdk8-1.6.10.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.6.10/kotlin-stdlib-jdk7-1.6.10.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="user.timezone" value="UTC"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-21-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/workspace/backend/target/surefire/surefirebooter-20250703234215266_3.jar /workspace/backend/target/surefire 2025-07-03T23-42-09_523-jvmRun1 surefire-20250703234215266_1tmp surefire_0-20250703234215266_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/workspace/backend/target/test-classes:/workspace/backend/target/classes:/home/ubuntu/.m2/repository/org/hibernate/orm/hibernate-core/6.4.0.Final/hibernate-core-6.4.0.Final.jar:/home/ubuntu/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/ubuntu/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/ubuntu/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/home/ubuntu/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/ubuntu/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/ubuntu/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/ubuntu/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/home/ubuntu/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/ubuntu/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/home/ubuntu/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/home/ubuntu/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/home/ubuntu/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/home/ubuntu/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/home/ubuntu/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/home/ubuntu/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/ubuntu/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/ubuntu/.m2/repository/org/hibernate/orm/hibernate-community-dialects/6.2.13.Final/hibernate-community-dialects-6.2.13.Final.jar:/home/ubuntu/.m2/repository/org/xerial/sqlite-jdbc/3.44.0.0/sqlite-jdbc-3.44.0.0.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/ubuntu/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/ubuntu/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/home/ubuntu/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/home/ubuntu/.m2/repository/org/mindrot/jbcrypt/0.4/jbcrypt-0.4.jar:/home/ubuntu/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/home/ubuntu/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/home/ubuntu/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.0/junit-jupiter-5.10.0.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/home/ubuntu/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/ubuntu/.m2/repository/org/junit/platform/junit-platform-commons/1.10.0/junit-platform-commons-1.10.0.jar:/home/ubuntu/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.0/junit-jupiter-params-5.10.0.jar:/home/ubuntu/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.0/junit-jupiter-engine-5.10.0.jar:/home/ubuntu/.m2/repository/org/junit/platform/junit-platform-engine/1.10.0/junit-platform-engine-1.10.0.jar:/home/ubuntu/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/ubuntu/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.9/byte-buddy-agent-1.14.9.jar:/home/ubuntu/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/ubuntu/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/ubuntu/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/ubuntu/.m2/repository/org/testcontainers/junit-jupiter/1.19.3/junit-jupiter-1.19.3.jar:/home/ubuntu/.m2/repository/org/testcontainers/testcontainers/1.19.3/testcontainers-1.19.3.jar:/home/ubuntu/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/ubuntu/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/ubuntu/.m2/repository/org/apache/commons/commons-compress/1.24.0/commons-compress-1.24.0.jar:/home/ubuntu/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/ubuntu/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/ubuntu/.m2/repository/com/github/docker-java/docker-java-api/3.3.4/docker-java-api-3.3.4.jar:/home/ubuntu/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.4/docker-java-transport-zerodep-3.3.4.jar:/home/ubuntu/.m2/repository/com/github/docker-java/docker-java-transport/3.3.4/docker-java-transport-3.3.4.jar:/home/ubuntu/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/home/ubuntu/.m2/repository/com/squareup/okhttp3/mockwebserver/4.11.0/mockwebserver-4.11.0.jar:/home/ubuntu/.m2/repository/com/squareup/okhttp3/okhttp/4.11.0/okhttp-4.11.0.jar:/home/ubuntu/.m2/repository/com/squareup/okio/okio/3.2.0/okio-3.2.0.jar:/home/ubuntu/.m2/repository/com/squareup/okio/okio-jvm/3.2.0/okio-jvm-3.2.0.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.6.20/kotlin-stdlib-1.6.20.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.6.20/kotlin-stdlib-common-1.6.20.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.6.10/kotlin-stdlib-jdk8-1.6.10.jar:/home/ubuntu/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.6.10/kotlin-stdlib-jdk7-1.6.10.jar:/home/ubuntu/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/ubuntu"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/usr/lib/jvm/java-21-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/workspace/backend"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/workspace/backend/target/surefire/surefirebooter-20250703234215266_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.7+6-Ubuntu-0ubuntu125.04"/>
    <property name="user.name" value="ubuntu"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.8.0-1024-aws"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/ubuntu/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-21"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="21.0.7"/>
    <property name="user.dir" value="/workspace/backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="java.vm.version" value="21.0.7+6-Ubuntu-0ubuntu125.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="app.profiles.active" value="test"/>
  </properties>
  <testcase name="shouldHandleComplexQueriesEfficiently" classname="com.myapp.review.RatingRepositoryTest$PerformanceTests" time="0.059">
    <system-out><![CDATA[2025-07-03 23:42:48.250 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        ratings
Hibernate: 
    delete 
    from
        ratings
2025-07-03 23:42:48.252 [main] DEBUG c.myapp.common.TestDatabaseManager - Cleaned all rating data from test database
2025-07-03 23:42:48.252 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=309, userId=1, restaurantId=2, ratingScore=1, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.252779193}
2025-07-03 23:42:48.252 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.255 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=310, userId=1, restaurantId=2, ratingScore=2, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.254978100}
2025-07-03 23:42:48.255 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.257 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=311, userId=1, restaurantId=2, ratingScore=3, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.257191377}
2025-07-03 23:42:48.257 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.259 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=312, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.259393894}
2025-07-03 23:42:48.259 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.261 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=313, userId=1, restaurantId=2, ratingScore=5, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.261652441}
2025-07-03 23:42:48.261 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.263 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=314, userId=1, restaurantId=2, ratingScore=1, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.263735867}
2025-07-03 23:42:48.263 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.266 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=315, userId=1, restaurantId=2, ratingScore=2, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.266063335}
2025-07-03 23:42:48.266 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.268 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=316, userId=1, restaurantId=2, ratingScore=3, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.268270242}
2025-07-03 23:42:48.268 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.270 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=317, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.270586460}
2025-07-03 23:42:48.270 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.272 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=318, userId=1, restaurantId=2, ratingScore=5, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.272780777}
2025-07-03 23:42:48.272 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.274 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=319, userId=1, restaurantId=2, ratingScore=1, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.274961074}
2025-07-03 23:42:48.275 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.277 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=320, userId=1, restaurantId=2, ratingScore=2, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.277208821}
2025-07-03 23:42:48.277 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.279 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=321, userId=1, restaurantId=2, ratingScore=3, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.279542439}
2025-07-03 23:42:48.279 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.281 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=322, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.281709556}
2025-07-03 23:42:48.281 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.284 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=323, userId=1, restaurantId=2, ratingScore=5, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.284134075}
2025-07-03 23:42:48.284 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.286 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=324, userId=1, restaurantId=2, ratingScore=1, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.286237291}
2025-07-03 23:42:48.286 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.288 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=325, userId=1, restaurantId=2, ratingScore=2, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.288385287}
2025-07-03 23:42:48.288 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.290 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=326, userId=1, restaurantId=2, ratingScore=3, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.290534654}
2025-07-03 23:42:48.290 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.292 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=327, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.292718081}
2025-07-03 23:42:48.292 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.295 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=328, userId=1, restaurantId=2, ratingScore=5, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.295026448}
2025-07-03 23:42:48.295 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.304 [main] DEBUG org.hibernate.SQL - 
    select
        avg(r1_0.rating_score) 
    from
        ratings r1_0 
    where
        r1_0.restaurant_id=?
Hibernate: 
    select
        avg(r1_0.rating_score) 
    from
        ratings r1_0 
    where
        r1_0.restaurant_id=?
2025-07-03 23:42:48.305 [main] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        ratings r1_0 
    where
        r1_0.restaurant_id=?
Hibernate: 
    select
        count(r1_0.id) 
    from
        ratings r1_0 
    where
        r1_0.restaurant_id=?
2025-07-03 23:42:48.305 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.rating_score,
        count(r1_0.id) 
    from
        ratings r1_0 
    where
        r1_0.restaurant_id=? 
    group by
        r1_0.rating_score
Hibernate: 
    select
        r1_0.rating_score,
        count(r1_0.id) 
    from
        ratings r1_0 
    where
        r1_0.restaurant_id=? 
    group by
        r1_0.rating_score
2025-07-03 23:42:48.308 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_at,
        r1_0.helpful_count,
        r1_0.is_verified,
        r1_0.rating_score,
        r1_0.restaurant_id,
        r1_0.review_text,
        r1_0.updated_at,
        r1_0.user_id 
    from
        ratings r1_0 
    where
        r1_0.rating_score between ? and ? 
    order by
        r1_0.created_at desc
Hibernate: 
    select
        r1_0.id,
        r1_0.created_at,
        r1_0.helpful_count,
        r1_0.is_verified,
        r1_0.rating_score,
        r1_0.restaurant_id,
        r1_0.review_text,
        r1_0.updated_at,
        r1_0.user_id 
    from
        ratings r1_0 
    where
        r1_0.rating_score between ? and ? 
    order by
        r1_0.created_at desc
]]></system-out>
  </testcase>
  <testcase name="shouldHandleBulkOperationsEfficiently" classname="com.myapp.review.RatingRepositoryTest$PerformanceTests" time="0.117">
    <system-out><![CDATA[2025-07-03 23:42:48.309 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        ratings
Hibernate: 
    delete 
    from
        ratings
2025-07-03 23:42:48.311 [main] DEBUG c.myapp.common.TestDatabaseManager - Cleaned all rating data from test database
2025-07-03 23:42:48.312 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=329, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.312000359}
2025-07-03 23:42:48.312 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.314 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=330, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.314205546}
2025-07-03 23:42:48.314 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.316 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=331, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.316416523}
2025-07-03 23:42:48.316 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.318 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=332, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.318702041}
2025-07-03 23:42:48.318 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.320 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=333, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.320965788}
2025-07-03 23:42:48.321 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.323 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=334, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.323267456}
2025-07-03 23:42:48.323 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.325 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=335, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.325530934}
2025-07-03 23:42:48.325 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.327 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=336, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.327681340}
2025-07-03 23:42:48.327 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.329 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=337, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.329924527}
2025-07-03 23:42:48.330 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.332 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=338, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.332173335}
2025-07-03 23:42:48.332 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.334 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=339, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.334362802}
2025-07-03 23:42:48.334 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.336 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=340, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.336573169}
2025-07-03 23:42:48.336 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.338 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=341, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.338718095}
2025-07-03 23:42:48.338 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.343 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=342, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.343399861}
2025-07-03 23:42:48.343 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.345 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=343, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.345643649}
2025-07-03 23:42:48.345 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.347 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=344, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.347840865}
2025-07-03 23:42:48.347 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.350 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=345, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.350176053}
2025-07-03 23:42:48.350 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.352 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=346, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.352333590}
2025-07-03 23:42:48.352 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.354 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=347, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.354493067}
2025-07-03 23:42:48.354 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.356 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=348, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.356584443}
2025-07-03 23:42:48.356 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.358 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=349, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.358851610}
2025-07-03 23:42:48.358 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.361 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=350, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.361019507}
2025-07-03 23:42:48.361 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.363 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=351, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.363175804}
2025-07-03 23:42:48.363 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.365 [main] DEBUG org.hibernate.SQL - 
    select
        next_val as id_val 
    from
        ratings_SEQ
Hibernate: 
    select
        next_val as id_val 
    from
        ratings_SEQ
2025-07-03 23:42:48.365 [main] DEBUG org.hibernate.SQL - 
    update
        ratings_SEQ 
    set
        next_val= ? 
    where
        next_val=?
Hibernate: 
    update
        ratings_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2025-07-03 23:42:48.367 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=352, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.365380581}
2025-07-03 23:42:48.367 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.369 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=353, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.369628303}
2025-07-03 23:42:48.369 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.371 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=354, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.371846}
2025-07-03 23:42:48.371 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.374 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=355, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.374132368}
2025-07-03 23:42:48.374 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.376 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=356, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.376213214}
2025-07-03 23:42:48.376 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.378 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=357, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.378297330}
2025-07-03 23:42:48.378 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.380 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=358, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.380369276}
2025-07-03 23:42:48.380 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.382 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=359, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.382490522}
2025-07-03 23:42:48.382 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.384 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=360, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.384812550}
2025-07-03 23:42:48.384 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.386 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=361, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.386950587}
2025-07-03 23:42:48.387 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.389 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=362, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.389098083}
2025-07-03 23:42:48.389 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.391 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=363, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.391412131}
2025-07-03 23:42:48.391 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.393 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=364, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.393594008}
2025-07-03 23:42:48.393 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.395 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=365, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.395752075}
2025-07-03 23:42:48.396 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.398 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=366, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.398330904}
2025-07-03 23:42:48.398 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.400 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=367, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.400466751}
2025-07-03 23:42:48.400 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.402 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=368, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.402801439}
2025-07-03 23:42:48.402 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.404 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=369, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.404936965}
2025-07-03 23:42:48.405 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.407 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=370, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.407050542}
2025-07-03 23:42:48.407 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.409 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=371, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.409213118}
2025-07-03 23:42:48.409 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.411 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=372, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.411379665}
2025-07-03 23:42:48.411 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.413 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=373, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.413549142}
2025-07-03 23:42:48.413 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.415 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=374, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.415704078}
2025-07-03 23:42:48.415 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.417 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=375, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.417798255}
2025-07-03 23:42:48.417 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.419 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=376, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.419893971}
2025-07-03 23:42:48.419 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.422 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=377, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.422057827}
2025-07-03 23:42:48.422 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-03 23:42:48.424 [main] INFO  com.myapp.review.RatingRepository - Created new rating: Rating{id=378, userId=1, restaurantId=2, ratingScore=4, hasReview=true, isVerified=false, helpfulCount=0, createdAt=2025-07-03T23:42:48.424184414}
2025-07-03 23:42:48.424 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ratings
        (created_at, helpful_count, is_verified, rating_score, restaurant_id, review_text, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
]]></system-out>
  </testcase>
</testsuite>