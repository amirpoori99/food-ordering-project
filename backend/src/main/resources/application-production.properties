# =================================================================
# FOOD ORDERING SYSTEM - PRODUCTION CONFIGURATION
# =================================================================

# =================================================================
# SERVER CONFIGURATION
# =================================================================
server.host=${SERVER_HOST:0.0.0.0}
server.port=${SERVER_PORT:8081}
server.max.threads=${SERVER_MAX_THREADS:200}
server.timeout.seconds=${SERVER_TIMEOUT:30}
server.backlog=${SERVER_BACKLOG:100}

# =================================================================
# DATABASE CONFIGURATION (PostgreSQL Production)
# =================================================================
# PostgreSQL Connection
database.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/food_ordering_prod}
database.username=${DATABASE_USERNAME:food_ordering_user}
database.password=${DATABASE_PASSWORD:your_secure_password_here}
database.driver=${DATABASE_DRIVER:org.postgresql.Driver}

# Connection Pool Settings
database.pool.min.size=${DB_POOL_MIN:5}
database.pool.max.size=${DB_POOL_MAX:50}
database.pool.timeout=${DB_POOL_TIMEOUT:30000}
database.pool.idle.timeout=${DB_POOL_IDLE_TIMEOUT:600000}
database.pool.validation.query=${DB_VALIDATION_QUERY:SELECT 1}

# Migration Settings
database.auto.migrate=${DB_AUTO_MIGRATE:false}
database.validate.on.migrate=${DB_VALIDATE_MIGRATE:true}

# =================================================================
# SECURITY CONFIGURATION
# =================================================================
# JWT Settings
security.jwt.secret=${JWT_SECRET:your_super_secure_jwt_secret_key_minimum_256_bits_change_this_in_production}
security.jwt.expiration.hours=${JWT_EXPIRATION_HOURS:24}
security.jwt.refresh.expiration.days=${JWT_REFRESH_EXPIRATION_DAYS:7}
security.jwt.issuer=${JWT_ISSUER:food-ordering-system}

# Password Security
security.password.bcrypt.rounds=${PASSWORD_BCRYPT_ROUNDS:12}
security.password.min.length=${PASSWORD_MIN_LENGTH:8}
security.password.max.attempts=${PASSWORD_MAX_ATTEMPTS:5}
security.account.lockout.minutes=${ACCOUNT_LOCKOUT_MINUTES:30}

# Session Management
security.session.timeout.minutes=${SESSION_TIMEOUT_MINUTES:60}
security.concurrent.sessions.max=${CONCURRENT_SESSIONS_MAX:3}

# =================================================================
# SSL/HTTPS CONFIGURATION
# =================================================================
ssl.enabled=${SSL_ENABLED:true}
ssl.keystore.path=${SSL_KEYSTORE_PATH:/etc/ssl/food-ordering/keystore.jks}
ssl.keystore.password=${SSL_KEYSTORE_PASSWORD:your_keystore_password}
ssl.key.password=${SSL_KEY_PASSWORD:your_key_password}
ssl.truststore.path=${SSL_TRUSTSTORE_PATH:/etc/ssl/food-ordering/truststore.jks}
ssl.truststore.password=${SSL_TRUSTSTORE_PASSWORD:your_truststore_password}

# SSL Security Settings
ssl.protocols=${SSL_PROTOCOLS:TLSv1.2,TLSv1.3}
ssl.cipher.suites=${SSL_CIPHER_SUITES:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256}
ssl.require.client.auth=${SSL_REQUIRE_CLIENT_AUTH:false}

# =================================================================
# CORS CONFIGURATION
# =================================================================
cors.enabled=${CORS_ENABLED:true}
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com,https://admin.yourdomain.com}
cors.allowed.methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed.headers=${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With}
cors.allow.credentials=${CORS_ALLOW_CREDENTIALS:true}
cors.max.age=${CORS_MAX_AGE:3600}

# =================================================================
# RATE LIMITING CONFIGURATION
# =================================================================
rate.limit.enabled=${RATE_LIMIT_ENABLED:true}
rate.limit.requests.per.minute=${RATE_LIMIT_REQUESTS_PER_MINUTE:60}
rate.limit.requests.per.hour=${RATE_LIMIT_REQUESTS_PER_HOUR:1000}
rate.limit.burst.capacity=${RATE_LIMIT_BURST_CAPACITY:10}

# API-specific Rate Limits
rate.limit.auth.requests.per.minute=${RATE_LIMIT_AUTH_PER_MINUTE:10}
rate.limit.register.requests.per.hour=${RATE_LIMIT_REGISTER_PER_HOUR:5}
rate.limit.order.requests.per.minute=${RATE_LIMIT_ORDER_PER_MINUTE:30}

# =================================================================
# LOGGING CONFIGURATION
# =================================================================
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.myapp=${LOG_LEVEL_APP:INFO}
logging.level.hibernate=${LOG_LEVEL_HIBERNATE:WARN}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:INFO}

# Log File Settings
logging.file.path=${LOG_FILE_PATH:/var/log/food-ordering}
logging.file.name=${LOG_FILE_NAME:food-ordering.log}
logging.file.max.size=${LOG_FILE_MAX_SIZE:100MB}
logging.file.max.history=${LOG_FILE_MAX_HISTORY:30}
logging.file.total.size.cap=${LOG_FILE_TOTAL_SIZE_CAP:1GB}

# Log Patterns
logging.pattern.console=${LOG_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}
logging.pattern.file=${LOG_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n}

# =================================================================
# MONITORING & HEALTH CHECK CONFIGURATION
# =================================================================
monitoring.enabled=${MONITORING_ENABLED:true}
monitoring.health.check.interval.seconds=${HEALTH_CHECK_INTERVAL:30}
monitoring.metrics.enabled=${METRICS_ENABLED:true}

# Health Check Endpoints
health.check.database.enabled=${HEALTH_CHECK_DB_ENABLED:true}
health.check.disk.space.enabled=${HEALTH_CHECK_DISK_ENABLED:true}
health.check.memory.enabled=${HEALTH_CHECK_MEMORY_ENABLED:true}

# Alert Thresholds
alert.memory.usage.threshold=${ALERT_MEMORY_THRESHOLD:85}
alert.disk.usage.threshold=${ALERT_DISK_THRESHOLD:90}
alert.response.time.threshold.ms=${ALERT_RESPONSE_TIME_THRESHOLD:5000}
alert.error.rate.threshold=${ALERT_ERROR_RATE_THRESHOLD:5}

# =================================================================
# BACKUP CONFIGURATION
# =================================================================
backup.enabled=${BACKUP_ENABLED:true}
backup.schedule.cron=${BACKUP_SCHEDULE:0 2 * * *}
backup.retention.days=${BACKUP_RETENTION_DAYS:30}
backup.location=${BACKUP_LOCATION:/var/backups/food-ordering}
backup.compress=${BACKUP_COMPRESS:true}

# Database Backup Settings
backup.database.enabled=${BACKUP_DATABASE_ENABLED:true}
backup.database.timeout.minutes=${BACKUP_DATABASE_TIMEOUT:30}
backup.file.uploads.enabled=${BACKUP_FILE_UPLOADS_ENABLED:true}

# =================================================================
# CACHE CONFIGURATION
# =================================================================
cache.enabled=${CACHE_ENABLED:true}
cache.default.ttl.seconds=${CACHE_DEFAULT_TTL:3600}
cache.max.size=${CACHE_MAX_SIZE:10000}

# Specific Cache Settings
cache.restaurant.ttl.seconds=${CACHE_RESTAURANT_TTL:1800}
cache.menu.ttl.seconds=${CACHE_MENU_TTL:1800}
cache.user.session.ttl.seconds=${CACHE_USER_SESSION_TTL:3600}

# =================================================================
# EMAIL CONFIGURATION (if needed)
# =================================================================
email.enabled=${EMAIL_ENABLED:false}
email.smtp.host=${EMAIL_SMTP_HOST:smtp.gmail.com}
email.smtp.port=${EMAIL_SMTP_PORT:587}
email.smtp.username=${EMAIL_SMTP_USERNAME:your_email@domain.com}
email.smtp.password=${EMAIL_SMTP_PASSWORD:your_email_password}
email.smtp.auth=${EMAIL_SMTP_AUTH:true}
email.smtp.starttls.enable=${EMAIL_SMTP_STARTTLS:true}

# =================================================================
# BUSINESS CONFIGURATION
# =================================================================
business.order.timeout.minutes=${ORDER_TIMEOUT_MINUTES:30}
business.delivery.radius.km=${DELIVERY_RADIUS_KM:10}
business.min.order.amount=${MIN_ORDER_AMOUNT:10000}
business.delivery.fee=${DELIVERY_FEE:5000}
business.free.delivery.threshold=${FREE_DELIVERY_THRESHOLD:50000}

# Payment Settings
payment.timeout.seconds=${PAYMENT_TIMEOUT_SECONDS:300}
payment.retry.attempts=${PAYMENT_RETRY_ATTEMPTS:3}

# =================================================================
# FILE UPLOAD CONFIGURATION
# =================================================================
file.upload.enabled=${FILE_UPLOAD_ENABLED:true}
file.upload.max.size.mb=${FILE_UPLOAD_MAX_SIZE_MB:10}
file.upload.allowed.types=${FILE_UPLOAD_ALLOWED_TYPES:jpg,jpeg,png,gif,pdf}
file.upload.path=${FILE_UPLOAD_PATH:/var/uploads/food-ordering}

# =================================================================
# PERFORMANCE CONFIGURATION
# =================================================================
performance.async.pool.size=${ASYNC_POOL_SIZE:20}
performance.request.timeout.seconds=${REQUEST_TIMEOUT_SECONDS:30}
performance.max.request.size.mb=${MAX_REQUEST_SIZE_MB:10}

# =================================================================
# DEVELOPMENT SETTINGS (disable in production)
# =================================================================
development.mode=${DEVELOPMENT_MODE:false}
development.auto.reload=${DEVELOPMENT_AUTO_RELOAD:false}
development.debug.sql=${DEVELOPMENT_DEBUG_SQL:false}
development.mock.external.apis=${DEVELOPMENT_MOCK_APIS:false} 